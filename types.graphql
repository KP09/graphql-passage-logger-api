# The following types define the data model of the example service
# based on which the GraphQL API is generated

# Uncomment the model below as well

type Passage @model {
  id: ID! @isUnique
  departurePort: String!
  departureDateTime: DateTime!
  arrivalPort: String!
  arrivalDateTime: DateTime!
  description: String
  mileage: Float
  hours: Float
  nightHours: Float
  role: String
  overnight: Boolean
  tidal: Boolean
  oceanPassage: Boolean

  # Optional system fields (remove if not needed):
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
  logger: User! @relation(name: "UserPassages")
}


# added by facebook template: (please uncomment)
type User @model {
  # Required system field:
  id: ID! @isUnique # read-only (managed by Graphcool)
  firstName: String!
  lastName: String!

  # Optional system fields (remove if not needed):
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  facebookUserId: String @isUnique
  email: String # optional, because it's obtained from Facebook API

  # Uncomment below - you can declare relations between models like this
  passages: [Passage!]! @relation(name: "UserPassages")
}
